---
trigger:
  - main
variables:
  webAppName: my-php
  vmImageName: ubuntu-latest
  environmentName: azure-vm
  rootFolder: $(System.DefaultWorkingDirectory)
  TAG: '$(Build.BuildId)'
  
stages:
  - stage: Build
    displayName: Build stage
    variables:
      phpVersion: "7.4"
    jobs:
      - job: BuildJob
        pool:
          vmImage: $(vmImageName)
        steps:
          - script: >
              sudo update-alternatives --set php /usr/bin/php$(phpVersion)

              sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)

              sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)

              sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)

              sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)

              php -version
            workingDirectory: $(rootFolder)
            displayName: Use PHP version $(phpVersion)
          - script: composer install --no-interaction --prefer-dist
            workingDirectory: $(rootFolder)
            displayName: Composer install
          - task: ArchiveFiles@2
            displayName: Archive files
            inputs:
              rootFolderOrFile: $(rootFolder)
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: true
          - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            displayName: Upload package
            artifact: drop
      - job: DeployProd
        steps:
          - task: DownloadSecureFile@1
            name: sshKey
            inputs:
              secureFile: 'bhaski-php_key.pem'
          - script: |
              sudo chmod 400 $(sshKey.secureFilePath)
              ssh -o StrictHostKeyChecking=no -i $(sshKey.secureFilePath) azureuser@20.187.65.253 "
              sudo systemctl restart apache2 
              cd /var/www/myapp
              sudo unzip -o /tmp/$(artifactName).zip -d .
              sudo chown -R www-data:www-data ."
          
          - task: CopyFilesOverSSH@0
            name: copy
            inputs:
              sshEndpoint: 'ssh'  # project settings --> service connection - create new -> select ssh and provide  server IP and key.pem file
              sourceFolder: '$(Build.ArtifactStagingDirectory)'
              #contents: '**/*.zip'
              targetFolder: '/var/www/myapp'
              cleanTargetFolder: true
              failOnEmptySource: true
 
          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'specific'
              project: 'be8e7b2f-ba9c-45cc-a31c-dde24678c3fe'
              pipeline: '1'
              specificBuildWithTriggering: true
              buildVersionToDownload: 'latest'
              tags: '$(Build.BuildId)'
              downloadType: 'single'
              downloadPath: '$(System.ArtifactsDirectory)'
              cleanDestinationFolder: true
